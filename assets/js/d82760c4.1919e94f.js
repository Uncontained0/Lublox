"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[490],{37010:function(e){e.exports=JSON.parse('{"functions":[{"name":"__call ","desc":"Constructs a client object.","params":[],"returns":[{"desc":"","lua_type":"Client"}],"function_type":"static","source":{"line":57,"path":"libs/client.lua"}},{"name":"Group ","desc":"Constructs a Group object.","params":[{"name":"GroupId","desc":"The GroupId of the group.","lua_type":"number"},{"name":"Data","desc":"Optional preset data. Used within the library, not meant for general use.","lua_type":"{[any]=any}"}],"returns":[{"desc":"","lua_type":"Group"}],"function_type":"method","source":{"line":77,"path":"libs/client.lua"}},{"name":"Role ","desc":"Constructs a Role object.","params":[{"name":"RoleId","desc":"The RoleId of the role.","lua_type":"number"},{"name":"Data","desc":"Optional preset data. Used within the library, not meant for general use.","lua_type":"{[any]=any}"}],"returns":[{"desc":"","lua_type":"Role"}],"function_type":"method","source":{"line":88,"path":"libs/client.lua"}},{"name":"Member ","desc":"Constructs a Member object.","params":[{"name":"GroupId","desc":"The group that the member object is a member of.","lua_type":"number|Group"},{"name":"UserId","desc":"The user that the member is for.","lua_type":"number|User"},{"name":"Data","desc":"Optional preset data. Used within the library, not meant for general use.","lua_type":"{[any]=any}"}],"returns":[{"desc":"","lua_type":"Member"}],"function_type":"method","source":{"line":100,"path":"libs/client.lua"}},{"name":"User ","desc":"Constructs a User object.","params":[{"name":"UserId","desc":"The UserId or Username of the user.","lua_type":"number|string"},{"name":"Data","desc":"Optional preset data. Used within the library, not meant for general use.","lua_type":"{[any]=any}"}],"returns":[{"desc":"","lua_type":"Role"}],"function_type":"method","source":{"line":111,"path":"libs/client.lua"}},{"name":"PageCursor ","desc":"Constructs a PageCursor object. This is used within the library, but it can be used yourself.","params":[{"name":"Endpoint","desc":"The endpoint to get pages from.","lua_type":"string"},{"name":"Tags","desc":"Optional list of tags to add on to the request.","lua_type":"{[string]=any}"},{"name":"Interpret","desc":"The function that interprets recieved data, to turn it into a useable format.","lua_type":"function"},{"name":"SortOrder","desc":"The sort order to use when requesting for pages. Can be \\"Asc\\" or \\"Desc\\".","lua_type":"string?"},{"name":"Limit","desc":"The page item limit to use when requesting pages.","lua_type":"number?"},{"name":"PageDataLocation","desc":"The location where page data is located for non-standard pages.","lua_type":"string?"},{"name":"PageNextLocation","desc":"The location where the next page cursor is found for non-standard pages.","lua_type":"string?"},{"name":"PagePreviousLocation","desc":"The location where the previous page cursor is found for non-standard pages.","lua_type":"string?"},{"name":"CursorTag","desc":"The name of the tag to send the cursor for non-standard pages.","lua_type":"string?"},{"name":"LimitTag","desc":"The name of the tag to send the limit for non-standard pages.","lua_type":"string?"},{"name":"SortOrderTag","desc":"The name of the tag to send the sort order for non-standard pages.","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"PageCursor"}],"function_type":"method","source":{"line":131,"path":"libs/client.lua"}},{"name":"JoinRequest ","desc":"Constructs a JoinRequest object.","params":[{"name":"GroupId","desc":"The Group or GroupId that join request is for.","lua_type":"Group|number"},{"name":"UserId","desc":"The User or UserId that made the join request.","lua_type":"User|number"},{"name":"Data","desc":"Optional preset data. Used within the library, not meant for general use.","lua_type":"{[any]=any}"}],"returns":[{"desc":"","lua_type":"JoinRequest"}],"function_type":"method","source":{"line":143,"path":"libs/client.lua"}},{"name":"Authenticate ","desc":"Authenticates the client, once authenticated the client cannot be deauthenticated.","params":[{"name":"Cookie","desc":"The cookie to authenticate the client with.","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":152,"path":"libs/client.lua"}},{"name":"Request ","desc":"Makes a HTTP request with the client\'s Cookie and X-CSRF-TOKEN.","params":[{"name":"Method","desc":"The HTTP method to use.","lua_type":"string"},{"name":"Endpoint","desc":"The target URL.","lua_type":"string"},{"name":"Tags","desc":"Optional tags (querystrings) to add to the request.","lua_type":"{[string]=any}"},{"name":"Headers","desc":"Optional headers to add to the request.","lua_type":"{[string]=any}"},{"name":"Body","desc":"Optional body to send with the request.","lua_type":"{[any]=any}"}],"returns":[{"desc":"If the request was successful (code 200)","lua_type":"boolean"},{"desc":"The body of the response.","lua_type":"{[number|string]=any}"},{"desc":"The headers of the response.","lua_type":"{[string]=any}"}],"function_type":"method","source":{"line":170,"path":"libs/client.lua"}}],"properties":[{"name":"Cookie","desc":"The cookie of the authenticated user to be used in requests.","lua_type":"string","readonly":true,"source":{"line":39,"path":"libs/client.lua"}},{"name":"Token","desc":"The X-CSRF-TOKEN to be used in requests.","lua_type":"string","readonly":true,"source":{"line":45,"path":"libs/client.lua"}}],"types":[],"name":"Client","desc":"The client manages all requests, and provides access to objects like Group and User.","source":{"line":50,"path":"libs/client.lua"}}')}}]);